
replicaCount: 1

oauth2:
  client:
    registration:
      azure:
        clientId: 'nil'
        clientSecret: 'nil'
      github:
        clientId: 'nil'
        clientSecret: 'nil'
      google:
        clientId: 'nil'
        clientSecret: 'nil'
    provider:
      azure:
        enabled: false
        authorizationUri: https://login.microsoftonline.com/common/oauth2/v2.0/authorize
        tokenUri: https://login.microsoftonline.com/common/oauth2/v2.0/token
        userInfoUri: https://graph.microsoft.com/v1.0/me
      github:
        enabled: false
      google:
        enabled: false
        
auth:
  frontendRedirectBasePath: ''

jwt:
  token:
    secret: ''
  
secret:
  mongodb_uri:
    username: root
    password: your_db_password
    dbhost_and_port: ''
    dbconn: "argos?authSource=admin&replicaSet=rs0"
    dbprotocol: 'mongodb'
    

mongodb:
  database: argos

image:
  registry: docker.io
  repository: argosnotary/argos-service
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: ''
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
